{"version":3,"sources":["./src/app/cadastro/cadastro-routing.module.ts","./src/app/cadastro/cadastro.module.ts","./src/app/cadastro/cadastro.page.ts","./src/app/models/Usuario.ts","./src/app/validators/compara-validator.ts","./src/app/validators/cpf-validator.ts","./src/app/cadastro/cadastro.page.scss","./src/app/cadastro/cadastro.page.html"],"names":[],"mappings":"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","file":"src_app_cadastro_cadastro_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CadastroPage } from './cadastro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CadastroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CadastroPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CadastroPageRoutingModule } from './cadastro-routing.module';\r\n\r\nimport { CadastroPage } from './cadastro.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, ReactiveFormsModule,\r\n    IonicModule,\r\n    CadastroPageRoutingModule\r\n  ],\r\n  declarations: [CadastroPage]\r\n})\r\nexport class CadastroPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { CpfValidator } from '../validators/cpf-validator';\r\nimport { comparaValidator } from '../validators/compara-validator';\r\nimport { Usuario } from '../models/Usuario';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-cadastro',\r\n  templateUrl: './cadastro.page.html',\r\n  styleUrls: ['./cadastro.page.scss'],\r\n})\r\nexport class CadastroPage implements OnInit {\r\n\r\n  formCadastro: FormGroup;\r\n  usuario: Usuario = new Usuario();\r\n\r\n  mensagens = {\r\n    nome: [\r\n      { tipo: 'required', mensagem: 'O campo Nome é obrigatório.' },\r\n      { tipo: 'minlength', mensagem: 'O nome deve ter pelo menos 3 caracteres.' },\r\n    ],\r\n    cpf: [\r\n      { tipo: 'required', mensagem: 'O campo CPF é obrigatório.' },\r\n      { tipo: 'invalido', mensagem: 'CPF Inválido.' },\r\n    ],\r\n    email: [\r\n      { tipo: 'required', mensagem: 'O campo E-mail é obrigatório.' },\r\n      { tipo: 'email', mensagem: 'E-mail Inválido.' },\r\n    ],\r\n    senha: [\r\n      { tipo: 'required', mensagem: 'É obrigatório confirmar senha.' },\r\n      { tipo: 'minlength', mensagem: 'A senha deve ter pelo menos 6 caracteres.', },\r\n      { tipo: 'maxlength', mensagem: 'A senha deve ter no máximo 8 caractéres.' },\r\n    ],\r\n    confirmaSenha: [\r\n      { tipo: 'required', mensagem: 'É obrigatório confirmar senha.' },\r\n      { tipo: 'minlength', mensagem: 'A senha deve ter pelo menos 6 caracteres.', },\r\n      { tipo: 'maxlength', mensagem: 'A senha deve ter no máximo 8 caractéres.' },\r\n      { tipo: 'comparacao', mensagem: 'Deve ser igual a Senha.' },\r\n    ],\r\n  };\r\n\r\n  constructor(private router: Router, private formBuilder: FormBuilder, private storgeService: StorageService, private route: Router) { \r\n\r\n\r\n    this.formCadastro = this.formBuilder.group({\r\n      nome: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\r\n      cpf: ['', Validators.compose([Validators.required, CpfValidator.cpfValido])],\r\n      email: ['', Validators.compose([Validators.required, Validators.email])],\r\n      senha: ['',  Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(8)])],\r\n      confirmaSenha: ['', Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(8)])]\r\n    }, {\r\n      validator: comparaValidator('senha', 'confirmaSenha')\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  voltarPage(): void {\r\n    this.router.navigate(['tabs/login'])\r\n  }\r\n\r\n  async salvarCadastro() {\r\n    console.log('Formulário: ', this.formCadastro.valid);\r\n\r\n    if(this.formCadastro.valid) {\r\n      this.usuario.nome = this.formCadastro.value.nome;\r\n      this.usuario.cpf = this.formCadastro.value.cpf;\r\n      this.usuario.email = this.formCadastro.value.email;\r\n      this.usuario.senha = this.formCadastro.value.senha;\r\n      await this.storgeService.set(this.usuario.email, this.usuario);\r\n      this.route.navigateByUrl('tabs/home');\r\n    } else {\r\n      alert('Formulário Inválido');\r\n    }\r\n  }\r\n\r\n  atualizar() {\r\n    this.router.navigate(['tabs/home'])\r\n    window.location.reload()\r\n  }\r\n\r\n}\r\n","export class Usuario {\r\n    nome: string;\r\n    cpf: string;\r\n    email: string;\r\n    senha: string;\r\n}","import { FormGroup } from '@angular/forms';\r\n\r\n// Validador customizado para comparar dois campos\r\nexport const comparaValidator = (\r\n  controleNome: string,\r\n  comparacaoNome: string\r\n) => {\r\n  const valida = (formGroup: FormGroup) => {\r\n    // Pega os campos conforme os nomes que foram passados\r\n    const controle = formGroup.controls[controleNome];\r\n    const comparacao = formGroup.controls[comparacaoNome];\r\n\r\n    // Verifica se o primeiro campo atende todas as validações\r\n    if (controle.errors) {\r\n      return;\r\n    }\r\n\r\n    // Verifica se o campos são iguais\r\n    if (controle.value !== comparacao.value) {\r\n      // Se não for, cria o erro \"comparacao\"\r\n      comparacao.setErrors({ comparacao: true });\r\n    } else {\r\n      // Caso contrário zera os erros.\r\n      comparacao.setErrors(null);\r\n    }\r\n  };\r\n  return valida;\r\n};","import { FormControl } from '@angular/forms';\r\n\r\nexport class CpfValidator {\r\n  static cpfValido = (control: FormControl): any => {\r\n    // Pega o valor que vem do controlador\r\n    const cpfString = String(control.value).replace(/\\D/g, '');\r\n    // Para verificar o digito do cpf\r\n    let rev = 0;\r\n    let add = 0;\r\n    // Verifica tamanho digitado e alguns cpfs que passam na verificação do digito, mas são inválidos\r\n    if (\r\n      cpfString.length !== 11 ||\r\n      cpfString === '00000000000' ||\r\n      cpfString === '11111111111' ||\r\n      cpfString === '22222222222' ||\r\n      cpfString === '33333333333' ||\r\n      cpfString === '44444444444' ||\r\n      cpfString === '55555555555' ||\r\n      cpfString === '66666666666' ||\r\n      cpfString === '77777777777' ||\r\n      cpfString === '88888888888' ||\r\n      cpfString === '99999999999'\r\n    ) {\r\n      // Retorna um objeto contendo uma propriedade para identificar o erro e um valor.\r\n      // esse valor pode ser pego e adicionado a mensagem, porém para esse caso não precisamos.\r\n      return {\r\n        invalido: true,\r\n      };\r\n    }\r\n\r\n    // Valida o primeiro digito do CPF\r\n    add = 0;\r\n    for (let i = 1; i <= 9; i++) {\r\n      add += Number(cpfString.substring(i - 1, i)) * (11 - i);\r\n    }\r\n    rev = (add * 10) % 11;\r\n\r\n    if (rev === 10 || rev === 11) {\r\n      rev = 0;\r\n    }\r\n    if (rev !== Number(cpfString.charAt(9))) {\r\n      return {\r\n        invalido: true,\r\n      };\r\n    }\r\n\r\n    // Valida o segundo digito do CPF\r\n    add = 0;\r\n    for (let i = 1; i <= 10; i++) {\r\n      add += Number(cpfString.substring(i - 1, i)) * (12 - i);\r\n    }\r\n\r\n    rev = (add * 10) % 11;\r\n    if (rev === 10 || rev === 11) {\r\n      rev = 0;\r\n    }\r\n    if (rev !== Number(cpfString.charAt(10))) {\r\n      return {\r\n        invalido: true,\r\n      };\r\n    }\r\n\r\n    // Se tudo der certo e passou nas verificações returna null, ou seja, não possui erros nesse controlador\r\n    return null;\r\n  };\r\n}","export default \".msg-erro {\\n  color: #ff0000;\\n  font-size: 10px;\\n  clear: both;\\n  position: relative;\\n}\\n\\n.vet {\\n  font-size: xx-large;\\n  font-family: \\\"Lexend\\\", sans-serif;\\n}\\n\\nion-text {\\n  font-size: medium;\\n  font-family: \\\"Lexend\\\", sans-serif;\\n}\\n\\nh3 {\\n  font-size: medium;\\n  font-family: \\\"Lexend\\\", sans-serif;\\n}\\n\\nh2 {\\n  font-family: \\\"Lexend\\\", sans-serif;\\n}\\n\\n.logo-img {\\n  width: 80%;\\n}\\n\\n.grid1 {\\n  height: 20%;\\n  padding: 0px;\\n}\\n\\n.row2 {\\n  height: 80%;\\n}\\n\\n.cont-login {\\n  width: 80%;\\n}\\n\\nion-icon {\\n  margin-right: 15px;\\n}\\n\\nion-button {\\n  margin-top: 5px;\\n  margin-bottom: 15px;\\n  font-family: \\\"Lexend\\\", sans-serif;\\n  border-width: 1px;\\n}\\n\\nion-content {\\n  align-items: center;\\n}\\n\\nion-slide {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 2px !important;\\n}\\n\\nion-button {\\n  width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhZGFzdHJvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxlQUFBO0VBQ0EsV0FBQTtFQUNBLGtCQUFBO0FBQ0o7O0FBQ0E7RUFDSSxtQkFBQTtFQUNBLGlDQUFBO0FBRUo7O0FBQ0E7RUFDSSxpQkFBQTtFQUNBLGlDQUFBO0FBRUo7O0FBQ0E7RUFDSSxpQkFBQTtFQUNBLGlDQUFBO0FBRUo7O0FBQ0E7RUFDSSxpQ0FBQTtBQUVKOztBQUNBO0VBQ0ksVUFBQTtBQUVKOztBQUNBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFFSjs7QUFFQTtFQUNJLFdBQUE7QUFDSjs7QUFFQTtFQUNJLFVBQUE7QUFDSjs7QUFFQTtFQUNJLGtCQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQ0FBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUE7RUFDSSxtQkFBQTtBQUNKOztBQUVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLG1CQUFBO0FBQ0o7O0FBRUE7RUFDSSxXQUFBO0FBQ0oiLCJmaWxlIjoiY2FkYXN0cm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1zZy1lcnJvIHtcclxuICAgIGNvbG9yOiAjZmYwMDAwO1xyXG4gICAgZm9udC1zaXplOiAxMHB4O1xyXG4gICAgY2xlYXI6IGJvdGg7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuLnZldCB7XHJcbiAgICBmb250LXNpemU6IHh4LWxhcmdlO1xyXG4gICAgZm9udC1mYW1pbHk6ICdMZXhlbmQnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5pb24tdGV4dHtcclxuICAgIGZvbnQtc2l6ZTogbWVkaXVtO1xyXG4gICAgZm9udC1mYW1pbHk6ICdMZXhlbmQnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG5oMyB7XHJcbiAgICBmb250LXNpemU6IG1lZGl1bTtcclxuICAgIGZvbnQtZmFtaWx5OiAnTGV4ZW5kJywgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuaDIge1xyXG4gICAgZm9udC1mYW1pbHk6ICdMZXhlbmQnLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4ubG9nby1pbWcge1xyXG4gICAgd2lkdGg6IDgwJTtcclxufVxyXG5cclxuLmdyaWQxIHtcclxuICAgIGhlaWdodDogMjAlO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG59XHJcblxyXG5cclxuLnJvdzIge1xyXG4gICAgaGVpZ2h0OiA4MCU7XHJcbn1cclxuXHJcbi5jb250LWxvZ2luIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbn1cclxuXHJcbmlvbi1pY29uIHtcclxuICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxufVxyXG5cclxuaW9uLWJ1dHRvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiA1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgZm9udC1mYW1pbHk6ICdMZXhlbmQnLCBzYW5zLXNlcmlmO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbn1cclxuXHJcbmlvbi1jb250ZW50IHtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbmlvbi1zbGlkZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogMnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbmlvbi1idXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn0iXX0= */\";","export default \"<style>\\r\\n  @import url('https://fonts.googleapis.com/css2?family=Lexend:wght@600&display=swap');\\r\\n</style>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-grid class=\\\"grid1\\\">\\r\\n    <ion-row class=\\\"row1\\\">\\r\\n      <ion-col>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n    <ion-row class=\\\"row2\\\">\\r\\n      <ion-col>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n\\r\\n  </ion-grid>\\r\\n\\r\\n  <ion-slide>\\r\\n    <div class=\\\"cont-login\\\">\\r\\n      <ion-grid>\\r\\n        <img class=\\\"logo-img\\\" src=\\\"assets/logo/work4.png\\\">\\r\\n        <h1 class=\\\"vet\\\">Veterimon</h1>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <h2>Login</h2>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n        <ion-row>\\r\\n          <ion-col>\\r\\n            <ion-list>\\r\\n              <form [formGroup]=\\\"formCadastro\\\">\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Nome</ion-label>\\r\\n                  <ion-input formControlName=\\\"nome\\\"></ion-input>\\r\\n                  <ng-container *ngFor=\\\"let erro of mensagens.nome\\\">\\r\\n                    <span class=\\\"msg-erro\\\"\\r\\n                      *ngIf=\\\"formCadastro.get('nome').hasError(erro.tipo) && (formCadastro.get('nome').dirty || formCadastro.get('nome').touched)\\\">\\r\\n                      {{ erro.mensagem }}\\r\\n                    </span>\\r\\n                  </ng-container>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Cpf</ion-label>\\r\\n                  <ion-input formControlName=\\\"cpf\\\"></ion-input>\\r\\n                  <ng-container *ngFor=\\\"let erro of mensagens.cpf\\\">\\r\\n                    <span class=\\\"msg-erro\\\"\\r\\n                      *ngIf=\\\"formCadastro.get('cpf').hasError(erro.tipo) && (formCadastro.get('cpf').dirty || formCadastro.get('cpf').touched)\\\">\\r\\n                      {{ erro.mensagem }}\\r\\n                    </span>\\r\\n                  </ng-container>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Email</ion-label>\\r\\n                  <ion-input formControlName=\\\"email\\\"></ion-input>\\r\\n                  <ng-container *ngFor=\\\"let erro of mensagens.email\\\">\\r\\n                    <span class=\\\"msg-erro\\\"\\r\\n                      *ngIf=\\\"formCadastro.get('email').hasError(erro.tipo) && (formCadastro.get('email').dirty || formCadastro.get('email').touched)\\\">\\r\\n                      {{ erro.mensagem }}\\r\\n                    </span>\\r\\n                  </ng-container>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Senha</ion-label>\\r\\n                  <ion-input type=\\\"password\\\" formControlName=\\\"senha\\\"></ion-input>\\r\\n                  <ng-container *ngFor=\\\"let erro of mensagens.senha\\\">\\r\\n                    <span class=\\\"msg-erro\\\"\\r\\n                      *ngIf=\\\"formCadastro.get('senha').hasError(erro.tipo) && (formCadastro.get('senha').dirty || formCadastro.get('senha').touched)\\\">\\r\\n                      {{ erro.mensagem }}\\r\\n                    </span>\\r\\n                  </ng-container>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-item>\\r\\n                  <ion-label position=\\\"floating\\\">Confirmar Senha</ion-label>\\r\\n                  <ion-input type=\\\"password\\\" formControlName=\\\"confirmaSenha\\\"></ion-input>\\r\\n                  <ng-container *ngFor=\\\"let erro of mensagens.confirmaSenha\\\">\\r\\n                    <span class=\\\"msg-erro\\\"\\r\\n                      *ngIf=\\\"formCadastro.get('confirmaSenha').hasError(erro.tipo) && (formCadastro.get('confirmaSenha').dirty || formCadastro.get('confirmaSenha').touched)\\\">\\r\\n                      {{ erro.mensagem }}\\r\\n                    </span>\\r\\n                  </ng-container>\\r\\n                </ion-item>\\r\\n\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"salvarCadastro()\\\">Salvar</ion-button>\\r\\n                <ion-button expand=\\\"block\\\" (click)=\\\"voltarPage()\\\">Voltar</ion-button>\\r\\n\\r\\n              </form>\\r\\n            </ion-list>\\r\\n          </ion-col>\\r\\n        </ion-row>\\r\\n      </ion-grid>\\r\\n    </div>\\r\\n  </ion-slide>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}